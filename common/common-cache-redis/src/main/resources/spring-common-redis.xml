<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:p="http://www.springframework.org/schema/p" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans  http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
	http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
	http://www.springframework.org/schema/jee  http://www.springframework.org/schema/jee/spring-jee-4.2.xsd
	http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-4.2.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd
	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.2.xsd"
	default-lazy-init="true">
	
   	<!-- 配置redis -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.maxIdle}" />
        <property name="maxTotal" value="${redis.maxTotal}" />  
        <property name="maxWaitMillis" value="${redis.maxWaitMillis}" /> 
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
		<property name="testOnReturn" value="true" />
		<!-- <property name="testWhileIdle" value="true"/> -->
	</bean>
<!-- 	<bean id="jedisShardInfo" class="redis.clients.jedis.JedisShardInfo"> -->
<!-- 		<constructor-arg index="0" value="${redis.host}" /> -->
<!-- 		<constructor-arg index="1" value="${redis.port}" /> -->
<!-- 	</bean> -->
<!-- 	<bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool" -->
<!-- 		scope="singleton"> -->
<!-- 		<constructor-arg index="0" ref="jedisPoolConfig" /> -->
<!-- 		<constructor-arg index="1"> -->
<!-- 			<list> -->
<!-- 				<ref bean="jedisShardInfo" /> -->
<!-- 			</list> -->
<!-- 		</constructor-arg> -->
<!-- 	</bean> -->
    <bean id="redisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"  
        p:host-name="${redis.host}" p:port="${redis.port}" p:password="${redis.pass}" p:pool-config-ref="jedisPoolConfig" p:timeout="${redis.timeout}">
<!--     	<constructor-arg ref="redisSentinelConfiguration" /> -->
    </bean>  
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">  
        <property name="connectionFactory" ref="redisConnectionFactory" />  
        <property name="keySerializer">  
        	<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />  
	    </property>     
	    <property name="valueSerializer">  
	        <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />  
	    </property>  
	    <property name="hashKeySerializer">    
	       <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>    
	    </property>  
	    <property name="hashValueSerializer">  
	       <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>    
	    </property> 
    </bean> 
	<bean id="redisSentinelConfiguration" class="org.springframework.data.redis.connection.RedisSentinelConfiguration">
        <property name="master">
            <bean class="org.springframework.data.redis.connection.RedisNode">
                <property name="name" value="${redis.sentinel.name}"></property>
            </bean>
        </property>
        <property name="sentinels">
            <set>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="${redis.sentinel.host}" />
                    <constructor-arg name="port" value="${redis.sentinel.port}" />               
                </bean>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="${redis.node1.host}" />
                	<constructor-arg name="port" value="${redis.node1.port}" />                   
                </bean>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="${redis.node2.host}" />
                    <constructor-arg name="port" value="${redis.node2.port}" />               
                </bean>
            </set>
        </property>
   </bean>
    
</beans>